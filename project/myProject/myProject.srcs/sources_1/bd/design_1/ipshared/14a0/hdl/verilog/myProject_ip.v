// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myProject_ip,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=869,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=10,HLS_SYN_FF=1562,HLS_SYN_LUT=1466,HLS_VERSION=2019_2}" *)

module myProject_ip (
        ap_clk,
        ap_rst_n,
        S_AXIS_TDATA,
        S_AXIS_TVALID,
        S_AXIS_TREADY,
        S_AXIS_TLAST,
        M_AXIS_TDATA,
        M_AXIS_TVALID,
        M_AXIS_TREADY,
        M_AXIS_TLAST
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_pp4_stage0 = 20'd65536;
parameter    ap_ST_fsm_state24 = 20'd131072;
parameter    ap_ST_fsm_pp5_stage0 = 20'd262144;
parameter    ap_ST_fsm_state28 = 20'd524288;

input   ap_clk;
input   ap_rst_n;
input  [31:0] S_AXIS_TDATA;
input   S_AXIS_TVALID;
output   S_AXIS_TREADY;
input   S_AXIS_TLAST;
output  [31:0] M_AXIS_TDATA;
output   M_AXIS_TVALID;
input   M_AXIS_TREADY;
output   M_AXIS_TLAST;

reg S_AXIS_TREADY;

 reg    ap_rst_n_inv;
reg    S_AXIS_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln61_fu_1022_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln68_fu_1096_p2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln78_fu_1258_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln85_fu_1275_p2;
reg    M_AXIS_TDATA_blk_n;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln116_reg_3133;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] icmp_ln116_reg_3133_pp5_iter1_reg;
reg   [6:0] i_3_reg_995;
reg   [6:0] word_cnt_1_reg_1006;
wire   [8:0] word_cnt_fu_1028_p2;
reg    ap_block_state2;
wire   [18:0] add_ln321_fu_1049_p2;
wire   [8:0] select_ln65_fu_1088_p3;
wire   [1:0] i_4_fu_1102_p2;
reg   [1:0] i_4_reg_2369;
reg    ap_block_state4;
wire   [0:0] trunc_ln321_1_fu_1112_p1;
reg   [0:0] trunc_ln321_1_reg_2374;
wire   [7:0] B_1_0_V_1_fu_1116_p3;
reg   [7:0] B_1_0_V_1_reg_2392;
wire   [7:0] B_1_0_V_2_fu_1124_p3;
reg   [7:0] B_1_0_V_2_reg_2397;
wire   [7:0] B_1_1_V_1_fu_1136_p3;
reg   [7:0] B_1_1_V_1_reg_2402;
wire   [7:0] B_1_1_V_2_fu_1143_p3;
reg   [7:0] B_1_1_V_2_reg_2407;
wire   [7:0] B_1_2_V_1_fu_1154_p3;
reg   [7:0] B_1_2_V_1_reg_2412;
wire   [7:0] B_1_2_V_2_fu_1161_p3;
reg   [7:0] B_1_2_V_2_reg_2417;
wire   [7:0] B_1_3_V_1_fu_1172_p3;
reg   [7:0] B_1_3_V_1_reg_2422;
wire   [7:0] B_1_3_V_2_fu_1179_p3;
reg   [7:0] B_1_3_V_2_reg_2427;
wire   [7:0] B_1_4_V_1_fu_1190_p3;
reg   [7:0] B_1_4_V_1_reg_2432;
wire   [7:0] B_1_4_V_2_fu_1197_p3;
reg   [7:0] B_1_4_V_2_reg_2437;
wire   [7:0] B_1_5_V_1_fu_1208_p3;
reg   [7:0] B_1_5_V_1_reg_2442;
wire   [7:0] B_1_5_V_2_fu_1215_p3;
reg   [7:0] B_1_5_V_2_reg_2447;
wire   [7:0] B_1_6_V_1_fu_1226_p3;
reg   [7:0] B_1_6_V_1_reg_2452;
wire   [7:0] B_1_6_V_2_fu_1233_p3;
reg   [7:0] B_1_6_V_2_reg_2457;
wire   [7:0] B_1_7_V_1_fu_1244_p3;
wire   [7:0] B_1_7_V_2_fu_1251_p3;
wire   [8:0] i_fu_1264_p2;
reg    ap_block_state13;
wire   [1:0] i_5_fu_1281_p2;
reg    ap_block_state15;
wire  signed [15:0] trunc_ln85_fu_1311_p1;
reg  signed [15:0] trunc_ln85_reg_2890;
wire    ap_CS_fsm_state16;
wire  signed [15:0] trunc_ln85_1_fu_1315_p1;
reg  signed [15:0] trunc_ln85_1_reg_2895;
wire   [15:0] zext_ln215_2_fu_1319_p1;
reg   [15:0] zext_ln215_2_reg_2900;
wire   [15:0] zext_ln215_3_fu_1323_p1;
reg   [15:0] zext_ln215_3_reg_2905;
wire   [15:0] zext_ln215_5_fu_1327_p1;
reg   [15:0] zext_ln215_5_reg_2910;
wire   [15:0] zext_ln215_6_fu_1331_p1;
reg   [15:0] zext_ln215_6_reg_2915;
wire   [15:0] zext_ln215_8_fu_1335_p1;
reg   [15:0] zext_ln215_8_reg_2920;
wire   [15:0] zext_ln215_9_fu_1339_p1;
reg   [15:0] zext_ln215_9_reg_2925;
wire   [15:0] zext_ln215_11_fu_1343_p1;
reg   [15:0] zext_ln215_11_reg_2930;
wire   [15:0] zext_ln215_12_fu_1347_p1;
reg   [15:0] zext_ln215_12_reg_2935;
wire   [15:0] zext_ln215_14_fu_1351_p1;
reg   [15:0] zext_ln215_14_reg_2940;
wire   [15:0] zext_ln215_15_fu_1355_p1;
reg   [15:0] zext_ln215_15_reg_2945;
wire   [15:0] zext_ln215_17_fu_1359_p1;
reg   [15:0] zext_ln215_17_reg_2950;
wire   [15:0] zext_ln215_18_fu_1363_p1;
reg   [15:0] zext_ln215_18_reg_2955;
wire   [15:0] zext_ln215_20_fu_1367_p1;
reg   [15:0] zext_ln215_20_reg_2960;
wire   [15:0] zext_ln215_21_fu_1371_p1;
reg   [15:0] zext_ln215_21_reg_2965;
wire   [10:0] zext_ln104_fu_1375_p1;
reg   [10:0] zext_ln104_reg_2970;
wire   [10:0] zext_ln109_fu_1379_p1;
reg   [10:0] zext_ln109_reg_2975;
wire   [7:0] trunc_ln109_fu_1383_p1;
reg   [7:0] trunc_ln109_reg_2980;
wire   [0:0] icmp_ln94_fu_1387_p2;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state17_pp4_stage0_iter0;
wire    ap_block_state18_pp4_stage0_iter1;
wire    ap_block_state19_pp4_stage0_iter2;
wire    ap_block_state20_pp4_stage0_iter3;
wire    ap_block_state21_pp4_stage0_iter4;
wire    ap_block_state22_pp4_stage0_iter5;
wire    ap_block_state23_pp4_stage0_iter6;
wire    ap_block_pp4_stage0_11001;
wire   [6:0] i_6_fu_1393_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] zext_ln215_fu_1399_p1;
reg   [63:0] zext_ln215_reg_2994;
wire   [5:0] trunc_ln321_2_fu_1409_p1;
reg   [5:0] trunc_ln321_2_reg_3029;
reg   [5:0] trunc_ln321_2_reg_3029_pp4_iter1_reg;
reg   [5:0] trunc_ln321_2_reg_3029_pp4_iter2_reg;
reg   [5:0] trunc_ln321_2_reg_3029_pp4_iter3_reg;
reg   [5:0] trunc_ln321_2_reg_3029_pp4_iter4_reg;
reg   [5:0] trunc_ln321_2_reg_3029_pp4_iter5_reg;
wire   [7:0] A_0_V_q0;
reg   [7:0] A_0_V_load_reg_3033;
reg    ap_enable_reg_pp4_iter1;
wire   [15:0] mul_ln1352_4_fu_1417_p2;
reg   [15:0] mul_ln1352_4_reg_3043;
wire   [15:0] mul_ln1352_5_fu_1422_p2;
reg   [15:0] mul_ln1352_5_reg_3048;
wire   [7:0] A_3_V_q0;
reg   [7:0] A_3_V_load_reg_3053;
wire   [15:0] mul_ln1352_8_fu_1431_p2;
reg   [15:0] mul_ln1352_8_reg_3058;
wire   [15:0] mul_ln1352_9_fu_1436_p2;
reg   [15:0] mul_ln1352_9_reg_3063;
wire   [7:0] A_5_V_q0;
reg   [7:0] A_5_V_load_reg_3068;
wire   [15:0] mul_ln1352_12_fu_1445_p2;
reg   [15:0] mul_ln1352_12_reg_3073;
wire   [15:0] mul_ln1352_13_fu_1450_p2;
reg   [15:0] mul_ln1352_13_reg_3078;
wire   [17:0] grp_fu_2289_p3;
reg   [17:0] add_ln100_1_reg_3083;
reg    ap_enable_reg_pp4_iter2;
wire   [17:0] add_ln100_4_fu_1492_p2;
reg   [17:0] add_ln100_4_reg_3088;
wire   [17:0] grp_fu_2296_p3;
reg   [17:0] add_ln101_1_reg_3093;
wire   [17:0] add_ln101_4_fu_1510_p2;
reg   [17:0] add_ln101_4_reg_3098;
wire   [10:0] sum2_fu_1565_p2;
reg   [10:0] sum2_reg_3103;
wire  signed [15:0] trunc_ln105_fu_1575_p1;
reg  signed [15:0] trunc_ln105_reg_3113;
wire  signed [15:0] trunc_ln105_1_fu_1583_p1;
reg  signed [15:0] trunc_ln105_1_reg_3123;
wire  signed [15:0] sum1_2_fu_2335_p2;
reg  signed [15:0] sum1_2_reg_3128;
wire   [0:0] icmp_ln116_fu_1921_p2;
wire    ap_block_state25_pp5_stage0_iter0;
wire    ap_block_state26_pp5_stage0_iter1;
reg    ap_block_state26_io;
wire    ap_block_state27_pp5_stage0_iter2;
reg    ap_block_state27_io;
reg    ap_block_pp5_stage0_11001;
wire   [6:0] word_cnt_2_fu_1927_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [5:0] trunc_ln544_fu_1933_p1;
reg   [5:0] trunc_ln544_reg_3142;
wire   [0:0] tmp_last_fu_1937_p2;
reg   [0:0] tmp_last_reg_3147;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state17;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
wire    ap_CS_fsm_state24;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state25;
reg   [5:0] A_0_V_address0;
reg    A_0_V_ce0;
reg    A_0_V_we0;
reg   [5:0] A_1_V_address0;
reg    A_1_V_ce0;
reg    A_1_V_we0;
wire   [7:0] A_1_V_q0;
reg   [5:0] A_2_V_address0;
reg    A_2_V_ce0;
reg    A_2_V_we0;
wire   [7:0] A_2_V_q0;
reg   [5:0] A_3_V_address0;
reg    A_3_V_ce0;
reg    A_3_V_we0;
reg   [5:0] A_4_V_address0;
reg    A_4_V_ce0;
reg    A_4_V_we0;
wire   [7:0] A_4_V_q0;
reg   [5:0] A_5_V_address0;
reg    A_5_V_ce0;
reg    A_5_V_we0;
reg   [5:0] A_6_V_address0;
reg    A_6_V_ce0;
reg    A_6_V_we0;
wire   [7:0] A_6_V_q0;
reg   [7:0] sigmoid_address0;
reg    sigmoid_ce0;
reg    sigmoid_we0;
wire   [31:0] sigmoid_q0;
wire   [7:0] sigmoid_address1;
reg    sigmoid_ce1;
wire   [31:0] sigmoid_q1;
reg   [8:0] word_cnt_0_reg_737;
wire    ap_CS_fsm_state1;
reg   [18:0] phi_mul_reg_748;
reg   [8:0] phi_urem_reg_759;
reg   [7:0] B_V_1_7_0610_reg_770;
reg   [7:0] B_V_1_6_0609_reg_782;
reg   [7:0] B_V_1_5_0608_reg_794;
reg   [7:0] B_V_1_4_0607_reg_806;
reg   [7:0] B_V_1_3_0606_reg_818;
reg   [7:0] B_V_1_2_0605_reg_830;
reg   [7:0] B_V_1_1_0604_reg_842;
reg   [7:0] B_V_1_0_0603_reg_854;
reg   [7:0] B_V_0_7_0602_reg_866;
reg   [7:0] B_V_0_6_0601_reg_878;
reg   [7:0] B_V_0_5_0600_reg_890;
reg   [7:0] B_V_0_4_0599_reg_902;
reg   [7:0] B_V_0_3_0598_reg_914;
reg   [7:0] B_V_0_2_0597_reg_926;
reg   [7:0] B_V_0_1_0596_reg_938;
reg   [7:0] B_V_0_0_0595_reg_950;
reg   [1:0] i_0_reg_962;
wire    ap_CS_fsm_state3;
reg   [8:0] i_1_reg_973;
wire    ap_CS_fsm_state12;
wire   [1:0] ap_phi_mux_i_2_phi_fu_988_p4;
reg   [1:0] i_2_reg_984;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln321_fu_1065_p1;
wire   [63:0] zext_ln82_fu_1270_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln105_fu_1570_p1;
wire   [63:0] zext_ln105_1_fu_1579_p1;
reg   [31:0] tmp_data_8_fu_288;
reg   [31:0] tmp_data_9_fu_292;
reg   [31:0] tmp_data_10_fu_296;
reg   [7:0] RES_63_V_fu_300;
wire   [7:0] RES_0_V_fu_1596_p2;
reg   [7:0] RES_63_V_1_fu_304;
reg   [7:0] RES_63_V_2_fu_308;
reg   [7:0] RES_63_V_3_fu_312;
reg   [7:0] RES_63_V_4_fu_316;
reg   [7:0] RES_63_V_5_fu_320;
reg   [7:0] RES_63_V_6_fu_324;
reg   [7:0] RES_63_V_7_fu_328;
reg   [7:0] RES_63_V_8_fu_332;
reg   [7:0] RES_63_V_9_fu_336;
reg   [7:0] RES_63_V_10_fu_340;
reg   [7:0] RES_63_V_11_fu_344;
reg   [7:0] RES_63_V_12_fu_348;
reg   [7:0] RES_63_V_13_fu_352;
reg   [7:0] RES_63_V_14_fu_356;
reg   [7:0] RES_63_V_15_fu_360;
reg   [7:0] RES_63_V_16_fu_364;
reg   [7:0] RES_63_V_17_fu_368;
reg   [7:0] RES_63_V_18_fu_372;
reg   [7:0] RES_63_V_19_fu_376;
reg   [7:0] RES_63_V_20_fu_380;
reg   [7:0] RES_63_V_21_fu_384;
reg   [7:0] RES_63_V_22_fu_388;
reg   [7:0] RES_63_V_23_fu_392;
reg   [7:0] RES_63_V_24_fu_396;
reg   [7:0] RES_63_V_25_fu_400;
reg   [7:0] RES_63_V_26_fu_404;
reg   [7:0] RES_63_V_27_fu_408;
reg   [7:0] RES_63_V_28_fu_412;
reg   [7:0] RES_63_V_29_fu_416;
reg   [7:0] RES_63_V_30_fu_420;
reg   [7:0] RES_63_V_31_fu_424;
reg   [7:0] RES_63_V_32_fu_428;
reg   [7:0] RES_63_V_33_fu_432;
reg   [7:0] RES_63_V_34_fu_436;
reg   [7:0] RES_63_V_35_fu_440;
reg   [7:0] RES_63_V_36_fu_444;
reg   [7:0] RES_63_V_37_fu_448;
reg   [7:0] RES_63_V_38_fu_452;
reg   [7:0] RES_63_V_39_fu_456;
reg   [7:0] RES_63_V_40_fu_460;
reg   [7:0] RES_63_V_41_fu_464;
reg   [7:0] RES_63_V_42_fu_468;
reg   [7:0] RES_63_V_43_fu_472;
reg   [7:0] RES_63_V_44_fu_476;
reg   [7:0] RES_63_V_45_fu_480;
reg   [7:0] RES_63_V_46_fu_484;
reg   [7:0] RES_63_V_47_fu_488;
reg   [7:0] RES_63_V_48_fu_492;
reg   [7:0] RES_63_V_49_fu_496;
reg   [7:0] RES_63_V_50_fu_500;
reg   [7:0] RES_63_V_51_fu_504;
reg   [7:0] RES_63_V_52_fu_508;
reg   [7:0] RES_63_V_53_fu_512;
reg   [7:0] RES_63_V_54_fu_516;
reg   [7:0] RES_63_V_55_fu_520;
reg   [7:0] RES_63_V_56_fu_524;
reg   [7:0] RES_63_V_57_fu_528;
reg   [7:0] RES_63_V_58_fu_532;
reg   [7:0] RES_63_V_59_fu_536;
reg   [7:0] RES_63_V_60_fu_540;
reg   [7:0] RES_63_V_61_fu_544;
reg   [7:0] RES_63_V_62_fu_548;
reg   [7:0] RES_63_V_63_fu_552;
wire    ap_block_pp5_stage0_01001;
wire   [3:0] trunc_ln321_fu_1045_p1;
wire   [7:0] trunc_ln301_fu_1034_p1;
wire   [6:0] tmp_7_fu_1055_p4;
wire   [8:0] add_ln65_fu_1076_p2;
wire   [0:0] icmp_ln65_fu_1082_p2;
wire   [7:0] B_0_0_V_fu_1108_p1;
wire   [7:0] B_0_1_V_fu_1132_p1;
wire   [7:0] B_0_2_V_fu_1150_p1;
wire   [7:0] B_0_3_V_fu_1168_p1;
wire   [7:0] B_0_4_V_fu_1186_p1;
wire   [7:0] B_0_5_V_fu_1204_p1;
wire   [7:0] B_0_6_V_fu_1222_p1;
wire   [7:0] B_0_7_V_fu_1240_p1;
wire   [7:0] mul_ln1352_4_fu_1417_p0;
wire   [15:0] zext_ln215_7_fu_1413_p1;
wire   [7:0] mul_ln1352_4_fu_1417_p1;
wire   [7:0] mul_ln1352_5_fu_1422_p0;
wire   [7:0] mul_ln1352_5_fu_1422_p1;
wire   [7:0] mul_ln1352_8_fu_1431_p0;
wire   [15:0] zext_ln215_13_fu_1427_p1;
wire   [7:0] mul_ln1352_8_fu_1431_p1;
wire   [7:0] mul_ln1352_9_fu_1436_p0;
wire   [7:0] mul_ln1352_9_fu_1436_p1;
wire   [7:0] mul_ln1352_12_fu_1445_p0;
wire   [15:0] zext_ln215_19_fu_1441_p1;
wire   [7:0] mul_ln1352_12_fu_1445_p1;
wire   [7:0] mul_ln1352_13_fu_1450_p0;
wire   [7:0] mul_ln1352_13_fu_1450_p1;
wire   [16:0] grp_fu_2273_p3;
wire   [16:0] grp_fu_2303_p3;
wire   [16:0] grp_fu_2319_p3;
wire   [17:0] zext_ln100_3_fu_1486_p1;
wire   [17:0] zext_ln100_4_fu_1489_p1;
wire   [16:0] grp_fu_2281_p3;
wire   [16:0] grp_fu_2311_p3;
wire   [16:0] grp_fu_2327_p3;
wire   [17:0] zext_ln101_3_fu_1504_p1;
wire   [17:0] zext_ln101_4_fu_1507_p1;
wire   [18:0] zext_ln100_2_fu_1516_p1;
wire   [18:0] zext_ln100_5_fu_1519_p1;
wire   [18:0] zext_ln101_2_fu_1528_p1;
wire   [18:0] zext_ln101_5_fu_1531_p1;
wire   [18:0] add_ln100_5_fu_1522_p2;
wire   [18:0] add_ln101_5_fu_1534_p2;
wire   [10:0] trunc_ln4_fu_1540_p4;
wire   [10:0] trunc_ln103_1_fu_1550_p4;
wire   [10:0] sum1_fu_1560_p2;
wire  signed [15:0] grp_fu_2339_p3;
wire   [7:0] trunc_ln109_1_fu_1587_p4;
wire   [7:0] tmp_6_fu_2135_p66;
wire   [7:0] grp_fu_2273_p0;
wire   [15:0] zext_ln215_1_fu_1455_p1;
wire   [7:0] grp_fu_2273_p1;
wire   [15:0] grp_fu_2273_p2;
wire   [7:0] grp_fu_2281_p0;
wire   [7:0] grp_fu_2281_p1;
wire   [15:0] grp_fu_2281_p2;
wire   [7:0] grp_fu_2289_p0;
wire   [15:0] zext_ln215_4_fu_1458_p1;
wire   [7:0] grp_fu_2289_p1;
wire   [16:0] grp_fu_2289_p2;
wire   [7:0] grp_fu_2296_p0;
wire   [7:0] grp_fu_2296_p1;
wire   [16:0] grp_fu_2296_p2;
wire   [7:0] grp_fu_2303_p0;
wire   [15:0] zext_ln215_10_fu_1468_p1;
wire   [7:0] grp_fu_2303_p1;
wire   [15:0] grp_fu_2303_p2;
wire   [7:0] grp_fu_2311_p0;
wire   [7:0] grp_fu_2311_p1;
wire   [15:0] grp_fu_2311_p2;
wire   [7:0] grp_fu_2319_p0;
wire   [15:0] zext_ln215_16_fu_1477_p1;
wire   [7:0] grp_fu_2319_p1;
wire   [15:0] grp_fu_2319_p2;
wire   [7:0] grp_fu_2327_p0;
wire   [7:0] grp_fu_2327_p1;
wire   [15:0] grp_fu_2327_p2;
reg   [19:0] ap_NS_fsm;
wire    ap_CS_fsm_state28;
wire    regslice_both_M_AXIS_V_data_U_apdone_blk;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire    regslice_both_S_AXIS_V_data_U_apdone_blk;
wire   [31:0] S_AXIS_TDATA_int;
wire    S_AXIS_TVALID_int;
reg    S_AXIS_TREADY_int;
wire    regslice_both_S_AXIS_V_data_U_ack_in;
wire    regslice_both_w1_S_AXIS_V_last_U_apdone_blk;
wire    S_AXIS_TLAST_int;
wire    regslice_both_w1_S_AXIS_V_last_U_vld_out;
wire    regslice_both_w1_S_AXIS_V_last_U_ack_in;
wire   [31:0] M_AXIS_TDATA_int;
reg    M_AXIS_TVALID_int;
wire    M_AXIS_TREADY_int;
wire    regslice_both_M_AXIS_V_data_U_vld_out;
wire    regslice_both_w1_M_AXIS_V_last_U_apdone_blk;
wire    M_AXIS_TLAST_int;
wire    regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy;
wire    regslice_both_w1_M_AXIS_V_last_U_vld_out;
wire   [16:0] grp_fu_2273_p20;
wire   [16:0] grp_fu_2281_p20;
wire   [17:0] grp_fu_2289_p20;
wire   [17:0] grp_fu_2296_p20;
wire   [16:0] grp_fu_2303_p20;
wire   [16:0] grp_fu_2311_p20;
wire   [16:0] grp_fu_2319_p20;
wire   [16:0] grp_fu_2327_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
end

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_0_V_address0),
    .ce0(A_0_V_ce0),
    .we0(A_0_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_0_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_1_V_address0),
    .ce0(A_1_V_ce0),
    .we0(A_1_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_1_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_2_V_address0),
    .ce0(A_2_V_ce0),
    .we0(A_2_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_2_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_3_V_address0),
    .ce0(A_3_V_ce0),
    .we0(A_3_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_3_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_4_V_address0),
    .ce0(A_4_V_ce0),
    .we0(A_4_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_4_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_5_V_address0),
    .ce0(A_5_V_ce0),
    .we0(A_5_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_5_V_q0)
);

myProject_ip_A_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
A_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(A_6_V_address0),
    .ce0(A_6_V_ce0),
    .we0(A_6_V_we0),
    .d0(trunc_ln301_fu_1034_p1),
    .q0(A_6_V_q0)
);

myProject_ip_sigmbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sigmoid_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sigmoid_address0),
    .ce0(sigmoid_ce0),
    .we0(sigmoid_we0),
    .d0(S_AXIS_TDATA_int),
    .q0(sigmoid_q0),
    .address1(sigmoid_address1),
    .ce1(sigmoid_ce1),
    .q1(sigmoid_q1)
);

myProject_ip_mux_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
myProject_ip_mux_cud_U1(
    .din0(RES_63_V_fu_300),
    .din1(RES_63_V_1_fu_304),
    .din2(RES_63_V_2_fu_308),
    .din3(RES_63_V_3_fu_312),
    .din4(RES_63_V_4_fu_316),
    .din5(RES_63_V_5_fu_320),
    .din6(RES_63_V_6_fu_324),
    .din7(RES_63_V_7_fu_328),
    .din8(RES_63_V_8_fu_332),
    .din9(RES_63_V_9_fu_336),
    .din10(RES_63_V_10_fu_340),
    .din11(RES_63_V_11_fu_344),
    .din12(RES_63_V_12_fu_348),
    .din13(RES_63_V_13_fu_352),
    .din14(RES_63_V_14_fu_356),
    .din15(RES_63_V_15_fu_360),
    .din16(RES_63_V_16_fu_364),
    .din17(RES_63_V_17_fu_368),
    .din18(RES_63_V_18_fu_372),
    .din19(RES_63_V_19_fu_376),
    .din20(RES_63_V_20_fu_380),
    .din21(RES_63_V_21_fu_384),
    .din22(RES_63_V_22_fu_388),
    .din23(RES_63_V_23_fu_392),
    .din24(RES_63_V_24_fu_396),
    .din25(RES_63_V_25_fu_400),
    .din26(RES_63_V_26_fu_404),
    .din27(RES_63_V_27_fu_408),
    .din28(RES_63_V_28_fu_412),
    .din29(RES_63_V_29_fu_416),
    .din30(RES_63_V_30_fu_420),
    .din31(RES_63_V_31_fu_424),
    .din32(RES_63_V_32_fu_428),
    .din33(RES_63_V_33_fu_432),
    .din34(RES_63_V_34_fu_436),
    .din35(RES_63_V_35_fu_440),
    .din36(RES_63_V_36_fu_444),
    .din37(RES_63_V_37_fu_448),
    .din38(RES_63_V_38_fu_452),
    .din39(RES_63_V_39_fu_456),
    .din40(RES_63_V_40_fu_460),
    .din41(RES_63_V_41_fu_464),
    .din42(RES_63_V_42_fu_468),
    .din43(RES_63_V_43_fu_472),
    .din44(RES_63_V_44_fu_476),
    .din45(RES_63_V_45_fu_480),
    .din46(RES_63_V_46_fu_484),
    .din47(RES_63_V_47_fu_488),
    .din48(RES_63_V_48_fu_492),
    .din49(RES_63_V_49_fu_496),
    .din50(RES_63_V_50_fu_500),
    .din51(RES_63_V_51_fu_504),
    .din52(RES_63_V_52_fu_508),
    .din53(RES_63_V_53_fu_512),
    .din54(RES_63_V_54_fu_516),
    .din55(RES_63_V_55_fu_520),
    .din56(RES_63_V_56_fu_524),
    .din57(RES_63_V_57_fu_528),
    .din58(RES_63_V_58_fu_532),
    .din59(RES_63_V_59_fu_536),
    .din60(RES_63_V_60_fu_540),
    .din61(RES_63_V_61_fu_544),
    .din62(RES_63_V_62_fu_548),
    .din63(RES_63_V_63_fu_552),
    .din64(trunc_ln544_reg_3142),
    .dout(tmp_6_fu_2135_p66)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U2(
    .din0(grp_fu_2273_p0),
    .din1(grp_fu_2273_p1),
    .din2(grp_fu_2273_p2),
    .dout(grp_fu_2273_p3)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U3(
    .din0(grp_fu_2281_p0),
    .din1(grp_fu_2281_p1),
    .din2(grp_fu_2281_p2),
    .dout(grp_fu_2281_p3)
);

myProject_ip_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
myProject_ip_mac_eOg_U4(
    .din0(grp_fu_2289_p0),
    .din1(grp_fu_2289_p1),
    .din2(grp_fu_2289_p2),
    .dout(grp_fu_2289_p3)
);

myProject_ip_mac_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
myProject_ip_mac_eOg_U5(
    .din0(grp_fu_2296_p0),
    .din1(grp_fu_2296_p1),
    .din2(grp_fu_2296_p2),
    .dout(grp_fu_2296_p3)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U6(
    .din0(grp_fu_2303_p0),
    .din1(grp_fu_2303_p1),
    .din2(grp_fu_2303_p2),
    .dout(grp_fu_2303_p3)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U7(
    .din0(grp_fu_2311_p0),
    .din1(grp_fu_2311_p1),
    .din2(grp_fu_2311_p2),
    .dout(grp_fu_2311_p3)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U8(
    .din0(grp_fu_2319_p0),
    .din1(grp_fu_2319_p1),
    .din2(grp_fu_2319_p2),
    .dout(grp_fu_2319_p3)
);

myProject_ip_mac_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
myProject_ip_mac_dEe_U9(
    .din0(grp_fu_2327_p0),
    .din1(grp_fu_2327_p1),
    .din2(grp_fu_2327_p2),
    .dout(grp_fu_2327_p3)
);

myProject_ip_mul_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
myProject_ip_mul_fYi_U10(
    .din0(trunc_ln85_1_reg_2895),
    .din1(trunc_ln105_reg_3113),
    .dout(sum1_2_fu_2335_p2)
);

myProject_ip_mac_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
myProject_ip_mac_g8j_U11(
    .din0(trunc_ln85_reg_2890),
    .din1(trunc_ln105_1_reg_3123),
    .din2(sum1_2_reg_3128),
    .dout(grp_fu_2339_p3)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_S_AXIS_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(S_AXIS_TDATA),
    .vld_in(S_AXIS_TVALID),
    .ack_in(regslice_both_S_AXIS_V_data_U_ack_in),
    .data_out(S_AXIS_TDATA_int),
    .vld_out(S_AXIS_TVALID_int),
    .ack_out(S_AXIS_TREADY_int),
    .apdone_blk(regslice_both_S_AXIS_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_S_AXIS_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(S_AXIS_TLAST),
    .vld_in(S_AXIS_TVALID),
    .ack_in(regslice_both_w1_S_AXIS_V_last_U_ack_in),
    .data_out(S_AXIS_TLAST_int),
    .vld_out(regslice_both_w1_S_AXIS_V_last_U_vld_out),
    .ack_out(S_AXIS_TREADY_int),
    .apdone_blk(regslice_both_w1_S_AXIS_V_last_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_M_AXIS_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(M_AXIS_TDATA_int),
    .vld_in(M_AXIS_TVALID_int),
    .ack_in(M_AXIS_TREADY_int),
    .data_out(M_AXIS_TDATA),
    .vld_out(regslice_both_M_AXIS_V_data_U_vld_out),
    .ack_out(M_AXIS_TREADY),
    .apdone_blk(regslice_both_M_AXIS_V_data_U_apdone_blk)
);

regslice_both_w1 #(
    .DataWidth( 1 ))
regslice_both_w1_M_AXIS_V_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(M_AXIS_TLAST_int),
    .vld_in(M_AXIS_TVALID_int),
    .ack_in(regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy),
    .data_out(M_AXIS_TLAST),
    .vld_out(regslice_both_w1_M_AXIS_V_last_U_vld_out),
    .ack_out(M_AXIS_TREADY),
    .apdone_blk(regslice_both_w1_M_AXIS_V_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state17)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp4_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state25)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_962 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == S_AXIS_TVALID_int))) begin
        i_0_reg_962 <= i_4_reg_2369;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_1_reg_973 <= 9'd0;
    end else if ((~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln78_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_1_reg_973 <= i_fu_1264_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_2_reg_984 <= 2'd0;
    end else if ((~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_2_reg_984 <= i_5_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_1387_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_3_reg_995 <= i_6_fu_1393_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_3_reg_995 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_748 <= add_ln321_fu_1049_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        phi_mul_reg_748 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_urem_reg_759 <= select_ln65_fu_1088_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        phi_urem_reg_759 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        word_cnt_0_reg_737 <= word_cnt_fu_1028_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        word_cnt_0_reg_737 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        word_cnt_1_reg_1006 <= 7'd0;
    end else if (((icmp_ln116_fu_1921_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        word_cnt_1_reg_1006 <= word_cnt_2_fu_1927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_0_V_load_reg_3033 <= A_0_V_q0;
        A_3_V_load_reg_3053 <= A_3_V_q0;
        A_5_V_load_reg_3068 <= A_5_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln68_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        B_1_0_V_1_reg_2392 <= B_1_0_V_1_fu_1116_p3;
        B_1_0_V_2_reg_2397 <= B_1_0_V_2_fu_1124_p3;
        trunc_ln321_1_reg_2374 <= trunc_ln321_1_fu_1112_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_1_V_1_reg_2402 <= B_1_1_V_1_fu_1136_p3;
        B_1_1_V_2_reg_2407 <= B_1_1_V_2_fu_1143_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_2_V_1_reg_2412 <= B_1_2_V_1_fu_1154_p3;
        B_1_2_V_2_reg_2417 <= B_1_2_V_2_fu_1161_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_3_V_1_reg_2422 <= B_1_3_V_1_fu_1172_p3;
        B_1_3_V_2_reg_2427 <= B_1_3_V_2_fu_1179_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_4_V_1_reg_2432 <= B_1_4_V_1_fu_1190_p3;
        B_1_4_V_2_reg_2437 <= B_1_4_V_2_fu_1197_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_5_V_1_reg_2442 <= B_1_5_V_1_fu_1208_p3;
        B_1_5_V_2_reg_2447 <= B_1_5_V_2_fu_1215_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_1_6_V_1_reg_2452 <= B_1_6_V_1_fu_1226_p3;
        B_1_6_V_2_reg_2457 <= B_1_6_V_2_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == S_AXIS_TVALID_int))) begin
        B_V_0_0_0595_reg_950 <= B_1_0_V_2_reg_2397;
        B_V_0_1_0596_reg_938 <= B_1_1_V_2_reg_2407;
        B_V_0_2_0597_reg_926 <= B_1_2_V_2_reg_2417;
        B_V_0_3_0598_reg_914 <= B_1_3_V_2_reg_2427;
        B_V_0_4_0599_reg_902 <= B_1_4_V_2_reg_2437;
        B_V_0_5_0600_reg_890 <= B_1_5_V_2_reg_2447;
        B_V_0_6_0601_reg_878 <= B_1_6_V_2_reg_2457;
        B_V_0_7_0602_reg_866 <= B_1_7_V_2_fu_1251_p3;
        B_V_1_0_0603_reg_854 <= B_1_0_V_1_reg_2392;
        B_V_1_1_0604_reg_842 <= B_1_1_V_1_reg_2402;
        B_V_1_2_0605_reg_830 <= B_1_2_V_1_reg_2412;
        B_V_1_3_0606_reg_818 <= B_1_3_V_1_reg_2422;
        B_V_1_4_0607_reg_806 <= B_1_4_V_1_reg_2432;
        B_V_1_5_0608_reg_794 <= B_1_5_V_1_reg_2442;
        B_V_1_6_0609_reg_782 <= B_1_6_V_1_reg_2452;
        B_V_1_7_0610_reg_770 <= B_1_7_V_1_fu_1244_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd10) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_10_fu_340 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd11) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_11_fu_344 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd12) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_12_fu_348 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd13) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_13_fu_352 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd14) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_14_fu_356 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd15) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_15_fu_360 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd16) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_16_fu_364 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd17) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_17_fu_368 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd18) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_18_fu_372 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd19) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_19_fu_376 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_1_fu_304 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd20) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_20_fu_380 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd21) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_21_fu_384 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd22) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_22_fu_388 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd23) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_23_fu_392 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd24) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_24_fu_396 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd25) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_25_fu_400 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd26) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_26_fu_404 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd27) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_27_fu_408 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd28) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_28_fu_412 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd29) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_29_fu_416 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd2) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_2_fu_308 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd30) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_30_fu_420 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd31) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_31_fu_424 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd32) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_32_fu_428 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd33) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_33_fu_432 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd34) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_34_fu_436 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd35) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_35_fu_440 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd36) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_36_fu_444 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd37) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_37_fu_448 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd38) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_38_fu_452 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd39) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_39_fu_456 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd3) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_3_fu_312 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd40) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_40_fu_460 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd41) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_41_fu_464 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd42) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_42_fu_468 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd43) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_43_fu_472 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd44) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_44_fu_476 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd45) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_45_fu_480 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd46) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_46_fu_484 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd47) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_47_fu_488 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd48) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_48_fu_492 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd49) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_49_fu_496 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd4) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_4_fu_316 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd50) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_50_fu_500 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd51) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_51_fu_504 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd52) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_52_fu_508 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd53) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_53_fu_512 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd54) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_54_fu_516 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd55) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_55_fu_520 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd56) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_56_fu_524 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd57) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_57_fu_528 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd58) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_58_fu_532 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd59) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_59_fu_536 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd5) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_5_fu_320 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd60) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_60_fu_540 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd61) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_61_fu_544 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd62) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_62_fu_548 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd63) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_63_fu_552 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd6) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_6_fu_324 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd7) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_7_fu_328 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd8) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_8_fu_332 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd9) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_9_fu_336 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_2_reg_3029_pp4_iter5_reg == 6'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1))) begin
        RES_63_V_fu_300 <= RES_0_V_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        add_ln100_1_reg_3083 <= grp_fu_2289_p3;
        add_ln101_1_reg_3093 <= grp_fu_2296_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        add_ln100_4_reg_3088 <= add_ln100_4_fu_1492_p2;
        add_ln101_4_reg_3098 <= add_ln101_4_fu_1510_p2;
        sum1_2_reg_3128 <= sum1_2_fu_2335_p2;
        sum2_reg_3103 <= sum2_fu_1565_p2;
        trunc_ln105_1_reg_3123 <= trunc_ln105_1_fu_1583_p1;
        trunc_ln105_reg_3113 <= trunc_ln105_fu_1575_p1;
        trunc_ln321_2_reg_3029_pp4_iter2_reg <= trunc_ln321_2_reg_3029_pp4_iter1_reg;
        trunc_ln321_2_reg_3029_pp4_iter3_reg <= trunc_ln321_2_reg_3029_pp4_iter2_reg;
        trunc_ln321_2_reg_3029_pp4_iter4_reg <= trunc_ln321_2_reg_3029_pp4_iter3_reg;
        trunc_ln321_2_reg_3029_pp4_iter5_reg <= trunc_ln321_2_reg_3029_pp4_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state4))) begin
        i_4_reg_2369 <= i_4_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln116_reg_3133 <= icmp_ln116_fu_1921_p2;
        icmp_ln116_reg_3133_pp5_iter1_reg <= icmp_ln116_reg_3133;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        mul_ln1352_12_reg_3073 <= mul_ln1352_12_fu_1445_p2;
        mul_ln1352_13_reg_3078 <= mul_ln1352_13_fu_1450_p2;
        mul_ln1352_4_reg_3043 <= mul_ln1352_4_fu_1417_p2;
        mul_ln1352_5_reg_3048 <= mul_ln1352_5_fu_1422_p2;
        mul_ln1352_8_reg_3058 <= mul_ln1352_8_fu_1431_p2;
        mul_ln1352_9_reg_3063 <= mul_ln1352_9_fu_1436_p2;
        trunc_ln321_2_reg_3029_pp4_iter1_reg <= trunc_ln321_2_reg_3029;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_i_2_phi_fu_988_p4 == 2'd1) & ~(ap_phi_mux_i_2_phi_fu_988_p4 == 2'd0) & ~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_data_10_fu_296 <= S_AXIS_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (ap_phi_mux_i_2_phi_fu_988_p4 == 2'd0) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_data_8_fu_288 <= S_AXIS_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (ap_phi_mux_i_2_phi_fu_988_p4 == 2'd1) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_data_9_fu_292 <= S_AXIS_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln116_fu_1921_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_last_reg_3147 <= tmp_last_fu_1937_p2;
        trunc_ln544_reg_3142 <= trunc_ln544_fu_1933_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln109_reg_2980 <= trunc_ln109_fu_1383_p1;
        trunc_ln85_1_reg_2895 <= trunc_ln85_1_fu_1315_p1;
        trunc_ln85_reg_2890 <= trunc_ln85_fu_1311_p1;
        zext_ln104_reg_2970[7 : 0] <= zext_ln104_fu_1375_p1[7 : 0];
        zext_ln109_reg_2975[7 : 0] <= zext_ln109_fu_1379_p1[7 : 0];
        zext_ln215_11_reg_2930[7 : 0] <= zext_ln215_11_fu_1343_p1[7 : 0];
        zext_ln215_12_reg_2935[7 : 0] <= zext_ln215_12_fu_1347_p1[7 : 0];
        zext_ln215_14_reg_2940[7 : 0] <= zext_ln215_14_fu_1351_p1[7 : 0];
        zext_ln215_15_reg_2945[7 : 0] <= zext_ln215_15_fu_1355_p1[7 : 0];
        zext_ln215_17_reg_2950[7 : 0] <= zext_ln215_17_fu_1359_p1[7 : 0];
        zext_ln215_18_reg_2955[7 : 0] <= zext_ln215_18_fu_1363_p1[7 : 0];
        zext_ln215_20_reg_2960[7 : 0] <= zext_ln215_20_fu_1367_p1[7 : 0];
        zext_ln215_21_reg_2965[7 : 0] <= zext_ln215_21_fu_1371_p1[7 : 0];
        zext_ln215_2_reg_2900[7 : 0] <= zext_ln215_2_fu_1319_p1[7 : 0];
        zext_ln215_3_reg_2905[7 : 0] <= zext_ln215_3_fu_1323_p1[7 : 0];
        zext_ln215_5_reg_2910[7 : 0] <= zext_ln215_5_fu_1327_p1[7 : 0];
        zext_ln215_6_reg_2915[7 : 0] <= zext_ln215_6_fu_1331_p1[7 : 0];
        zext_ln215_8_reg_2920[7 : 0] <= zext_ln215_8_fu_1335_p1[7 : 0];
        zext_ln215_9_reg_2925[7 : 0] <= zext_ln215_9_fu_1339_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_1387_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        trunc_ln321_2_reg_3029 <= trunc_ln321_2_fu_1409_p1;
        zext_ln215_reg_2994[6 : 0] <= zext_ln215_fu_1399_p1[6 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_0_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_0_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_0_V_ce0 = 1'b1;
    end else begin
        A_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd0))) begin
        A_0_V_we0 = 1'b1;
    end else begin
        A_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_1_V_address0 = zext_ln215_reg_2994;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_1_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_1_V_ce0 = 1'b1;
    end else begin
        A_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd1))) begin
        A_1_V_we0 = 1'b1;
    end else begin
        A_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_2_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_2_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_2_V_ce0 = 1'b1;
    end else begin
        A_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd2))) begin
        A_2_V_we0 = 1'b1;
    end else begin
        A_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_3_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_3_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_3_V_ce0 = 1'b1;
    end else begin
        A_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd3))) begin
        A_3_V_we0 = 1'b1;
    end else begin
        A_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_4_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_4_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_4_V_ce0 = 1'b1;
    end else begin
        A_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd4))) begin
        A_4_V_we0 = 1'b1;
    end else begin
        A_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_5_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_5_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_5_V_ce0 = 1'b1;
    end else begin
        A_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (trunc_ln321_fu_1045_p1 == 4'd5))) begin
        A_5_V_we0 = 1'b1;
    end else begin
        A_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        A_6_V_address0 = zext_ln215_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_6_V_address0 = zext_ln321_fu_1065_p1;
    end else begin
        A_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        A_6_V_ce0 = 1'b1;
    end else begin
        A_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & ~(trunc_ln321_fu_1045_p1 == 4'd0) & ~(trunc_ln321_fu_1045_p1 == 4'd1) & ~(trunc_ln321_fu_1045_p1 == 4'd2) & ~(trunc_ln321_fu_1045_p1 == 4'd3) & ~(trunc_ln321_fu_1045_p1 == 4'd4) & ~(trunc_ln321_fu_1045_p1 == 4'd5) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        A_6_V_we0 = 1'b1;
    end else begin
        A_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln116_reg_3133_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((icmp_ln116_reg_3133 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0)))) begin
        M_AXIS_TDATA_blk_n = M_AXIS_TREADY_int;
    end else begin
        M_AXIS_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln116_reg_3133 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        M_AXIS_TVALID_int = 1'b1;
    end else begin
        M_AXIS_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        S_AXIS_TDATA_blk_n = S_AXIS_TVALID_int;
    end else begin
        S_AXIS_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == S_AXIS_TVALID) & (regslice_both_S_AXIS_V_data_U_ack_in == 1'b1))) begin
        S_AXIS_TREADY = 1'b1;
    end else begin
        S_AXIS_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state10) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state8) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state7) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state6) & (1'b1 == S_AXIS_TVALID_int)) | ((1'b1 == ap_CS_fsm_state5) & (1'b1 == S_AXIS_TVALID_int)) | (~((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln68_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | (~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | (~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln78_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        S_AXIS_TREADY_int = 1'b1;
    end else begin
        S_AXIS_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln94_fu_1387_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln116_fu_1921_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1))) begin
        sigmoid_address0 = zext_ln105_fu_1570_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sigmoid_address0 = zext_ln82_fu_1270_p1;
    end else begin
        sigmoid_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1)) | (~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state13)))) begin
        sigmoid_ce0 = 1'b1;
    end else begin
        sigmoid_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1))) begin
        sigmoid_ce1 = 1'b1;
    end else begin
        sigmoid_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln78_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        sigmoid_we0 = 1'b1;
    end else begin
        sigmoid_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln61_fu_1022_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln68_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln68_fu_1096_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == S_AXIS_TVALID_int))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln78_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if ((~((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln78_fu_1258_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if ((~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (icmp_ln85_fu_1275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if ((~((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int)) & (1'b1 == ap_CS_fsm_state15) & (icmp_ln85_fu_1275_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln94_fu_1387_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter5 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter5 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter6 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln94_fu_1387_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln116_fu_1921_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln116_fu_1921_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (regslice_both_M_AXIS_V_data_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_0_0_V_fu_1108_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_1_V_fu_1132_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_2_V_fu_1150_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_3_V_fu_1168_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_4_V_fu_1186_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_5_V_fu_1204_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_6_V_fu_1222_p1 = S_AXIS_TDATA_int[7:0];

assign B_0_7_V_fu_1240_p1 = S_AXIS_TDATA_int[7:0];

assign B_1_0_V_1_fu_1116_p3 = ((trunc_ln321_1_fu_1112_p1[0:0] === 1'b1) ? B_0_0_V_fu_1108_p1 : B_V_1_0_0603_reg_854);

assign B_1_0_V_2_fu_1124_p3 = ((trunc_ln321_1_fu_1112_p1[0:0] === 1'b1) ? B_V_0_0_0595_reg_950 : B_0_0_V_fu_1108_p1);

assign B_1_1_V_1_fu_1136_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_1_V_fu_1132_p1 : B_V_1_1_0604_reg_842);

assign B_1_1_V_2_fu_1143_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_1_0596_reg_938 : B_0_1_V_fu_1132_p1);

assign B_1_2_V_1_fu_1154_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_2_V_fu_1150_p1 : B_V_1_2_0605_reg_830);

assign B_1_2_V_2_fu_1161_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_2_0597_reg_926 : B_0_2_V_fu_1150_p1);

assign B_1_3_V_1_fu_1172_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_3_V_fu_1168_p1 : B_V_1_3_0606_reg_818);

assign B_1_3_V_2_fu_1179_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_3_0598_reg_914 : B_0_3_V_fu_1168_p1);

assign B_1_4_V_1_fu_1190_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_4_V_fu_1186_p1 : B_V_1_4_0607_reg_806);

assign B_1_4_V_2_fu_1197_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_4_0599_reg_902 : B_0_4_V_fu_1186_p1);

assign B_1_5_V_1_fu_1208_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_5_V_fu_1204_p1 : B_V_1_5_0608_reg_794);

assign B_1_5_V_2_fu_1215_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_5_0600_reg_890 : B_0_5_V_fu_1204_p1);

assign B_1_6_V_1_fu_1226_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_6_V_fu_1222_p1 : B_V_1_6_0609_reg_782);

assign B_1_6_V_2_fu_1233_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_6_0601_reg_878 : B_0_6_V_fu_1222_p1);

assign B_1_7_V_1_fu_1244_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_0_7_V_fu_1240_p1 : B_V_1_7_0610_reg_770);

assign B_1_7_V_2_fu_1251_p3 = ((trunc_ln321_1_reg_2374[0:0] === 1'b1) ? B_V_0_7_0602_reg_866 : B_0_7_V_fu_1240_p1);

assign M_AXIS_TDATA_int = tmp_6_fu_2135_p66;

assign M_AXIS_TLAST_int = tmp_last_reg_3147;

assign M_AXIS_TVALID = regslice_both_M_AXIS_V_data_U_vld_out;

assign RES_0_V_fu_1596_p2 = (trunc_ln109_1_fu_1587_p4 + trunc_ln109_reg_2980);

assign add_ln100_4_fu_1492_p2 = (zext_ln100_3_fu_1486_p1 + zext_ln100_4_fu_1489_p1);

assign add_ln100_5_fu_1522_p2 = (zext_ln100_2_fu_1516_p1 + zext_ln100_5_fu_1519_p1);

assign add_ln101_4_fu_1510_p2 = (zext_ln101_3_fu_1504_p1 + zext_ln101_4_fu_1507_p1);

assign add_ln101_5_fu_1534_p2 = (zext_ln101_2_fu_1528_p1 + zext_ln101_5_fu_1531_p1);

assign add_ln321_fu_1049_p2 = (19'd586 + phi_mul_reg_748);

assign add_ln65_fu_1076_p2 = (phi_urem_reg_759 + 9'd1);

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp5_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp5_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state13 = ((icmp_ln78_fu_1258_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int));
end

always @ (*) begin
    ap_block_state15 = ((icmp_ln85_fu_1275_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int));
end

assign ap_block_state17_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((icmp_ln61_fu_1022_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int));
end

assign ap_block_state20_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((icmp_ln116_reg_3133 == 1'd0) & (1'b0 == M_AXIS_TREADY_int));
end

assign ap_block_state26_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((icmp_ln116_reg_3133_pp5_iter1_reg == 1'd0) & (1'b0 == M_AXIS_TREADY_int));
end

assign ap_block_state27_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((icmp_ln68_fu_1096_p2 == 1'd0) & (1'b0 == S_AXIS_TVALID_int));
end

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_phi_mux_i_2_phi_fu_988_p4 = i_2_reg_984;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_2273_p0 = zext_ln215_1_fu_1455_p1;

assign grp_fu_2273_p1 = zext_ln215_2_reg_2900;

assign grp_fu_2273_p2 = grp_fu_2273_p20;

assign grp_fu_2273_p20 = mul_ln1352_4_reg_3043;

assign grp_fu_2281_p0 = zext_ln215_1_fu_1455_p1;

assign grp_fu_2281_p1 = zext_ln215_3_reg_2905;

assign grp_fu_2281_p2 = grp_fu_2281_p20;

assign grp_fu_2281_p20 = mul_ln1352_5_reg_3048;

assign grp_fu_2289_p0 = zext_ln215_4_fu_1458_p1;

assign grp_fu_2289_p1 = zext_ln215_5_reg_2910;

assign grp_fu_2289_p2 = grp_fu_2289_p20;

assign grp_fu_2289_p20 = grp_fu_2273_p3;

assign grp_fu_2296_p0 = zext_ln215_4_fu_1458_p1;

assign grp_fu_2296_p1 = zext_ln215_6_reg_2915;

assign grp_fu_2296_p2 = grp_fu_2296_p20;

assign grp_fu_2296_p20 = grp_fu_2281_p3;

assign grp_fu_2303_p0 = zext_ln215_10_fu_1468_p1;

assign grp_fu_2303_p1 = zext_ln215_11_reg_2930;

assign grp_fu_2303_p2 = grp_fu_2303_p20;

assign grp_fu_2303_p20 = mul_ln1352_8_reg_3058;

assign grp_fu_2311_p0 = zext_ln215_10_fu_1468_p1;

assign grp_fu_2311_p1 = zext_ln215_12_reg_2935;

assign grp_fu_2311_p2 = grp_fu_2311_p20;

assign grp_fu_2311_p20 = mul_ln1352_9_reg_3063;

assign grp_fu_2319_p0 = zext_ln215_16_fu_1477_p1;

assign grp_fu_2319_p1 = zext_ln215_17_reg_2950;

assign grp_fu_2319_p2 = grp_fu_2319_p20;

assign grp_fu_2319_p20 = mul_ln1352_12_reg_3073;

assign grp_fu_2327_p0 = zext_ln215_16_fu_1477_p1;

assign grp_fu_2327_p1 = zext_ln215_18_reg_2955;

assign grp_fu_2327_p2 = grp_fu_2327_p20;

assign grp_fu_2327_p20 = mul_ln1352_13_reg_3078;

assign i_4_fu_1102_p2 = (i_0_reg_962 + 2'd1);

assign i_5_fu_1281_p2 = (i_2_reg_984 + 2'd1);

assign i_6_fu_1393_p2 = (i_3_reg_995 + 7'd1);

assign i_fu_1264_p2 = (i_1_reg_973 + 9'd1);

assign icmp_ln116_fu_1921_p2 = ((word_cnt_1_reg_1006 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1022_p2 = ((word_cnt_0_reg_737 == 9'd448) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1082_p2 = ((add_ln65_fu_1076_p2 < 9'd7) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1096_p2 = ((i_0_reg_962 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1258_p2 = ((i_1_reg_973 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_1275_p2 = ((i_2_reg_984 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1387_p2 = ((i_3_reg_995 == 7'd64) ? 1'b1 : 1'b0);

assign mul_ln1352_12_fu_1445_p0 = zext_ln215_19_fu_1441_p1;

assign mul_ln1352_12_fu_1445_p1 = zext_ln215_20_reg_2960;

assign mul_ln1352_12_fu_1445_p2 = (mul_ln1352_12_fu_1445_p0 * mul_ln1352_12_fu_1445_p1);

assign mul_ln1352_13_fu_1450_p0 = zext_ln215_19_fu_1441_p1;

assign mul_ln1352_13_fu_1450_p1 = zext_ln215_21_reg_2965;

assign mul_ln1352_13_fu_1450_p2 = (mul_ln1352_13_fu_1450_p0 * mul_ln1352_13_fu_1450_p1);

assign mul_ln1352_4_fu_1417_p0 = zext_ln215_7_fu_1413_p1;

assign mul_ln1352_4_fu_1417_p1 = zext_ln215_8_reg_2920;

assign mul_ln1352_4_fu_1417_p2 = (mul_ln1352_4_fu_1417_p0 * mul_ln1352_4_fu_1417_p1);

assign mul_ln1352_5_fu_1422_p0 = zext_ln215_7_fu_1413_p1;

assign mul_ln1352_5_fu_1422_p1 = zext_ln215_9_reg_2925;

assign mul_ln1352_5_fu_1422_p2 = (mul_ln1352_5_fu_1422_p0 * mul_ln1352_5_fu_1422_p1);

assign mul_ln1352_8_fu_1431_p0 = zext_ln215_13_fu_1427_p1;

assign mul_ln1352_8_fu_1431_p1 = zext_ln215_14_reg_2940;

assign mul_ln1352_8_fu_1431_p2 = (mul_ln1352_8_fu_1431_p0 * mul_ln1352_8_fu_1431_p1);

assign mul_ln1352_9_fu_1436_p0 = zext_ln215_13_fu_1427_p1;

assign mul_ln1352_9_fu_1436_p1 = zext_ln215_15_reg_2945;

assign mul_ln1352_9_fu_1436_p2 = (mul_ln1352_9_fu_1436_p0 * mul_ln1352_9_fu_1436_p1);

assign select_ln65_fu_1088_p3 = ((icmp_ln65_fu_1082_p2[0:0] === 1'b1) ? add_ln65_fu_1076_p2 : 9'd0);

assign sigmoid_address1 = zext_ln105_1_fu_1579_p1;

assign sum1_fu_1560_p2 = (zext_ln104_reg_2970 + trunc_ln4_fu_1540_p4);

assign sum2_fu_1565_p2 = (zext_ln109_reg_2975 + trunc_ln103_1_fu_1550_p4);

assign tmp_7_fu_1055_p4 = {{phi_mul_reg_748[18:12]}};

assign tmp_last_fu_1937_p2 = ((word_cnt_1_reg_1006 == 7'd63) ? 1'b1 : 1'b0);

assign trunc_ln103_1_fu_1550_p4 = {{add_ln101_5_fu_1534_p2[18:8]}};

assign trunc_ln105_1_fu_1583_p1 = sigmoid_q1[15:0];

assign trunc_ln105_fu_1575_p1 = sigmoid_q0[15:0];

assign trunc_ln109_1_fu_1587_p4 = {{grp_fu_2339_p3[15:8]}};

assign trunc_ln109_fu_1383_p1 = tmp_data_8_fu_288[7:0];

assign trunc_ln301_fu_1034_p1 = S_AXIS_TDATA_int[7:0];

assign trunc_ln321_1_fu_1112_p1 = i_0_reg_962[0:0];

assign trunc_ln321_2_fu_1409_p1 = i_3_reg_995[5:0];

assign trunc_ln321_fu_1045_p1 = phi_urem_reg_759[3:0];

assign trunc_ln4_fu_1540_p4 = {{add_ln100_5_fu_1522_p2[18:8]}};

assign trunc_ln544_fu_1933_p1 = word_cnt_1_reg_1006[5:0];

assign trunc_ln85_1_fu_1315_p1 = tmp_data_9_fu_292[15:0];

assign trunc_ln85_fu_1311_p1 = tmp_data_10_fu_296[15:0];

assign word_cnt_2_fu_1927_p2 = (word_cnt_1_reg_1006 + 7'd1);

assign word_cnt_fu_1028_p2 = (word_cnt_0_reg_737 + 9'd1);

assign zext_ln100_2_fu_1516_p1 = add_ln100_1_reg_3083;

assign zext_ln100_3_fu_1486_p1 = grp_fu_2303_p3;

assign zext_ln100_4_fu_1489_p1 = grp_fu_2319_p3;

assign zext_ln100_5_fu_1519_p1 = add_ln100_4_reg_3088;

assign zext_ln101_2_fu_1528_p1 = add_ln101_1_reg_3093;

assign zext_ln101_3_fu_1504_p1 = grp_fu_2311_p3;

assign zext_ln101_4_fu_1507_p1 = grp_fu_2327_p3;

assign zext_ln101_5_fu_1531_p1 = add_ln101_4_reg_3098;

assign zext_ln104_fu_1375_p1 = B_V_0_0_0595_reg_950;

assign zext_ln105_1_fu_1579_p1 = sum2_reg_3103;

assign zext_ln105_fu_1570_p1 = sum1_fu_1560_p2;

assign zext_ln109_fu_1379_p1 = B_V_1_0_0603_reg_854;

assign zext_ln215_10_fu_1468_p1 = A_3_V_load_reg_3053;

assign zext_ln215_11_fu_1343_p1 = B_V_0_4_0599_reg_902;

assign zext_ln215_12_fu_1347_p1 = B_V_1_4_0607_reg_806;

assign zext_ln215_13_fu_1427_p1 = A_4_V_q0;

assign zext_ln215_14_fu_1351_p1 = B_V_0_5_0600_reg_890;

assign zext_ln215_15_fu_1355_p1 = B_V_1_5_0608_reg_794;

assign zext_ln215_16_fu_1477_p1 = A_5_V_load_reg_3068;

assign zext_ln215_17_fu_1359_p1 = B_V_0_6_0601_reg_878;

assign zext_ln215_18_fu_1363_p1 = B_V_1_6_0609_reg_782;

assign zext_ln215_19_fu_1441_p1 = A_6_V_q0;

assign zext_ln215_1_fu_1455_p1 = A_0_V_load_reg_3033;

assign zext_ln215_20_fu_1367_p1 = B_V_0_7_0602_reg_866;

assign zext_ln215_21_fu_1371_p1 = B_V_1_7_0610_reg_770;

assign zext_ln215_2_fu_1319_p1 = B_V_0_1_0596_reg_938;

assign zext_ln215_3_fu_1323_p1 = B_V_1_1_0604_reg_842;

assign zext_ln215_4_fu_1458_p1 = A_1_V_q0;

assign zext_ln215_5_fu_1327_p1 = B_V_0_2_0597_reg_926;

assign zext_ln215_6_fu_1331_p1 = B_V_1_2_0605_reg_830;

assign zext_ln215_7_fu_1413_p1 = A_2_V_q0;

assign zext_ln215_8_fu_1335_p1 = B_V_0_3_0598_reg_914;

assign zext_ln215_9_fu_1339_p1 = B_V_1_3_0606_reg_818;

assign zext_ln215_fu_1399_p1 = i_3_reg_995;

assign zext_ln321_fu_1065_p1 = tmp_7_fu_1055_p4;

assign zext_ln82_fu_1270_p1 = i_1_reg_973;

always @ (posedge ap_clk) begin
    zext_ln215_2_reg_2900[15:8] <= 8'b00000000;
    zext_ln215_3_reg_2905[15:8] <= 8'b00000000;
    zext_ln215_5_reg_2910[15:8] <= 8'b00000000;
    zext_ln215_6_reg_2915[15:8] <= 8'b00000000;
    zext_ln215_8_reg_2920[15:8] <= 8'b00000000;
    zext_ln215_9_reg_2925[15:8] <= 8'b00000000;
    zext_ln215_11_reg_2930[15:8] <= 8'b00000000;
    zext_ln215_12_reg_2935[15:8] <= 8'b00000000;
    zext_ln215_14_reg_2940[15:8] <= 8'b00000000;
    zext_ln215_15_reg_2945[15:8] <= 8'b00000000;
    zext_ln215_17_reg_2950[15:8] <= 8'b00000000;
    zext_ln215_18_reg_2955[15:8] <= 8'b00000000;
    zext_ln215_20_reg_2960[15:8] <= 8'b00000000;
    zext_ln215_21_reg_2965[15:8] <= 8'b00000000;
    zext_ln104_reg_2970[10:8] <= 3'b000;
    zext_ln109_reg_2975[10:8] <= 3'b000;
    zext_ln215_reg_2994[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //myProject_ip
